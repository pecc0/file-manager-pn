#summary Как съм имплементирал превода на текстовете и как да се ползва класа TextI18n

= Introduction =

Как съм имплементирал превода на текстовете и как да се ползва класа {{{TextI18n}}}


= Details =

За да може приложението ни да се появява на различни езици трябва текстовете да не бъдат "набити" в кода (hard-coded).

Абстрактно погледнато ни трябва една таблица с 2 колони: ID на текст и стойност на текст на съответния език.

Приложението знае само ID-тата на текстовете, а класа {{{TextI18n}}} има за задача при подадено ID да върне реалния стринг.

Реализация:
Текстовете се съдържат в XML файл със следната структура
{{{
<Texts>
	<Text id='ID на текста'>Стойността на текста</Text>
	<Text id=''></Text>
...
</Texts>
}}}
Който е една възможна реализация на таблица с 2 колони.
Този файл ще се намира на адрес http://<името на сървъра>/texts.xml
В статичния метод {{{TextI18n.init()}}} се прави заявка до този адрес за да се получи файла. По този начин правя динамично зареждане на текстовете. 
{{{TextI18n.init()}}} трябва да бъде извикан след като името на сървъра е инициализирано с {{{DataPost.setSetverUrl()}}}

За да можем да направим data binding м/у текстовете в класа {{{TextI18n}}} и всякакви полета които имат нужда от превод, трябва да имаме инстанция на класа {{{TextI18n}}}. И т.к. няма смисъл от повече от една инстанция, този клас ще е singleton (до колкото може да бъде реализиран в ActionScript).
За data binding-а имаме метод 
{{{
[Bindable("textI18nChanged")]
public function getText(textId:String):String
}}} 
който ще се вика вътрешно от флекс-а при Event "textI18nChanged".

За да bind-нем някое поле на някоя контрола към даден текст (на който знаем ID-то), трябва да напишем (примерно)
{{{
label="{TextI18n.getInstance().getText('userName')}"
}}} 
където userName е ID-то на текста.

Enjoy

Подобрение:
Към ID-то на текста вече могат да се добавят параметри:
пр: 
{{{
badUsers(Dancho, Sasho)
}}}
"Богатото" ID се парсва по следния начин за да се извлекат частите му:
 * От началото на стринга се взема частта съставена само от англ. букви и цифри - реалното ID.
 * Отделя се частта заградена в скоби, махат се скобите, получения стринг се сплитва по запетайките и всяка от чатите минава през "unescape" което декодира URL-кодиран текст. (Т.е. параметрите трябва да са кодирани с URL-енкодинг)
След това стринга минава през [http://livedocs.adobe.com/flex/201/langref/mx/utils/StringUtil.html#substitute() StringUtil.substitute] с параметри извлечените параметри.
По този начин ако реалния стринг изглежда 
{{{
"Лоши потребители {0} и {1}"
}}}
, в крайна сметка getText ще върне
{{{
"Лоши потребители Dancho и Sasho"
}}}
Enjoy ^ 2